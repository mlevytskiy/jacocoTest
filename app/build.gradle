apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion = 28

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
    }
}

android.testOptions {
    unitTests.all {
        jacoco {
            includeNoLocationClasses = true
        }
    }
}

task copyTestClasses(type: Copy) {
    from "build/tmp/kotlin-classes/debugUnitTest"
    into "build/intermediates/classes/debug"
}

task jacocoTestReport(type:JacocoReport) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports"
    // exclude auto-generated classes and tests
    def fileFilter = ['**/R.class', '**/R$*.class',
                      '**/BuildConfig.*', '**/Manifest*.*',
                      'android/**/*.*']
    def debugTree = fileTree(dir:
            "${project.buildDir}/intermediates/classes/debug",
            excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"
    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    additionalSourceDirs = files([
            "${buildDir}/generated/source/buildConfig/debug",
            "${buildDir}/generated/source/r/debug"
    ])
    executionData = fileTree(dir: project.projectDir, includes:
            ['**/*.exec', '**/*.ec'])
    reports {
        xml.enabled = true
//        xml.destination = "${buildDir}/jacocoTestReport.xml"
        csv.enabled = false
        html.enabled = true
//        html.destination = "${buildDir}/reports/jacoco"
    }
}


ext {
    coverageEnabled = true
    coverageSourceDirs = 'src/test/kotlin'
}

dependencies {
//    implementation project(':extensions')
    testImplementation 'junit:junit:4.12'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.11'
}

apply plugin: 'jacoco'